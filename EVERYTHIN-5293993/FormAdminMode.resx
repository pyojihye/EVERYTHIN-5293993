<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFcAAABgCAYAAABot+55AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAX
        EQAAFxEByibzPwAAAvJJREFUeF7tndttUwEQRCmRUighDSSUkF/SDfmmCruBZDdeS4MZO76euyjeO0c6
        Uh5Gc/d8BBFZ4tv/Yr/fv23NOr0fNj7dOr0fNj7dOr0fNj7dOr0fNj7dOr0fNj7dOr0fNj7dOr0fNg7+
        CZ/v0Hxuds+HdXo/bBx8rpfdFfncJ3f8Zb2sHzYOOq4CGwcdV4GNg46rwMZBx1Vg46DjKrBx0HEV2Djo
        uApsHHRcBTYOOq4CGwcdV4GNg46rwMZBx1Vg46DjKrBx0HEV2DjouApsHHRcBTYOOq4CGwcdV4GNg46r
        wMZBx1Vg46DjIr9eH3/Uh1fBxkHHPZJhX16fFv1hNg46bnIM67grx8WwS+PudruHc8aDfK+X3RXx3OvE
        PQ27NO5EIqAel4V13BXingub1ks2SwS8Pe6lsAcfH766dUoLEfC2uJ+HvQ/rnBYi4PK4U8KmdVILEXBZ
        3Elh0zqrhQh4fdxpYdM6rYUIeF3ciWHTOq+FCPh53Klh048Dm4iAl+NODptWhxYi4OW4L7+ffrKHmmJ1
        aCECfv5jYXLgjwObiIDX/YU2NXCd10IEvC5uMjFwndZCBLw+bjItcJ3VQgRcFjeZFLhOaiECLo+bTAlc
        57QQAW+Lmxx+bccf+uC/v+L7atYpLUTA2+Mml/6RUS/ZLBFQi5ucC1zf3iwRUI+bsMD1rc0SAdeJm5wG
        ri9vlgi4XtwEA9eXNksEXDducgxcn26WCLh+3CQD14ebJQL2xDWO20oE/Bpx2RvwjsaDbPuNeCpsHPRb
        SBXYOOi4CmwcdFwFNg46rgIbBx1XgY2DjqvAxkHHVWDjoOMqsHHQcRXYOOi4CmwcdFwFNg46rgIbBx1X
        gY2DjqvAxkHHVWDjoOMqsHHQcRXYOOi4CmwcdFwFNg46rgIbBx1XgY2DjqvAxkHHVWDjoOMqsHHQcRXY
        OOj/bE6BjU+3Tu+HjU+3Tu+HjU+3Tu+HjU+3Tu+HjU+3Tu+HjU+3Tu+Hjc92//YO3i5w8n1vsCkAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>